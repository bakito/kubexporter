summary: true
progress: bubbles
archive: true
archiveRetentionDays: 10
archiveTarget: .
namespace:
asLists: false
#queryPageSize: 1000
clearTarget: true
#createdWithin: 24h
worker: 5
encrypted:
  aesKey: "12345678901234567890123456789012"
  kindFields:
    Secret:
      - [data]
      - [stringData]
masked:
  replacement: '***'
  checksum: md5
  kindFields:
    Secret:
      - [stringData]
considerOwnerReferences: true
excluded:
  kinds:
    - Binding
    - ComponentStatus
    - Endpoints
    - Event
    - events.k8s.io.Event
    - LimitRange
    - LocalSubjectAccessReview
    - PersistentVolume
    - Pod
    - ReplicationController
    - ReplicationControllerDummy
    - RoleBindingRestriction
    - apps.ReplicaSet
    - batch.Job
    - events.k8s.io.Event
    - extensions.ReplicaSet
    - kyverno.io.ClusterBackgroundScanReport
    - kyverno.io.BackgroundScanReport
    - wgpolicyk8s.io.ClusterPolicyReport
    - wgpolicyk8s.io.PolicyReport
    - cilium.io.CiliumIdentity
    - metrics.k8s.io.PodMetrics
    - metrics.k8s.io.NodeMetrics
    - coordination.k8s.io.Lease
  fields:
    - [status]
    - [metadata, uid]
    - [metadata, selfLink]
    - [metadata, resourceVersion]
    - [metadata, creationTimestamp]
    - [metadata, deletionTimestamp]
    - [metadata, deletionGracePeriodSeconds]
    - [metadata, generation]
    - [metadata, annotations, "kubectl.kubernetes.io/last-applied-configuration"]
  kindFields:
    Service:
      - [spec, clusterIP]
    Secret:
      - [metadata, annotations, "openshift.io/token-secret.name"]
      - [metadata, annotations, "openshift.io/token-secret.value"]
  kindByField:
    Secret:
      - field: [type]
        values: ['helm.sh/release', 'helm.sh/release.v1']
  # fields that should be preserved even when their parent field is excluded
  # TODO: add kind-specific preserved fields for more fine-grained control
  preservedFields:
    # global preserved fields - these will be preserved when their parent field is excluded
    fields:
      - [status, loadBalancer, ingress]  # preserve status.loadBalancer.ingress when status is excluded

